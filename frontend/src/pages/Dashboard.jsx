import React, { useContext, useEffect, useState } from 'react';
import { AuthContext } from '../context/AuthContext';
import { jwtDecode } from 'jwt-decode';
import axios from 'axios';

function Dashboard() {
  const { token } = useContext(AuthContext);
  const [role, setRole] = useState(null);
  const [users, setUsers] = useState([]);
  const [form, setForm] = useState({ username: '', password: '', role: '' });

  useEffect(() => {
    if (token) {
      const decoded = jwtDecode(token);
      const identity = JSON.parse(decoded.sub);
      setRole(identity.role);

      if (identity.role === 'admin') {
        fetchUsers();
      }
    }
  }, [token]);

  const fetchUsers = async () => {
    try {
      const res = await axios.get('http://127.0.0.1:5000/api/users', {
        headers: {
          Authorization: `Bearer ${token}`,
        },
      });
      setUsers(res.data);
    } catch (err) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤:', err);
    }
  };

  const handleCreateUser = async () => {
    try {
      await axios.post('http://127.0.0.1:5000/api/users', form, {
        headers: {
          Authorization: `Bearer ${token}`,
        },
      });
      fetchUsers();
      setForm({ username: '', password: '', role: '' });
    } catch (err) {
      alert('–ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: ' + err.response?.data?.message);
    }
  };

  const handleDeleteUser = async (id) => {
    if (!window.confirm('–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞?')) return;

    try {
      await axios.delete(`http://127.0.0.1:5000/api/users?id=${id}`, {
        headers: {
          Authorization: `Bearer ${token}`,
        },
      });
      fetchUsers();
    } catch (err) {
      alert('–ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: ' + err.response?.data?.message);
    }
  };

  return (
    <div className="container">
      <h2 className="mb-4">üìä –û—Å–æ–±–∏—Å—Ç–∏–π –∫–∞–±—ñ–Ω–µ—Ç ({role})</h2>

      {role === 'admin' && (
        <>
          <h4>üë• –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ —Å–∏—Å—Ç–µ–º–∏:</h4>
          <table className="table">
            <thead>
              <tr>
                <th>ID</th>
                <th>–Ü–º‚Äô—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞</th>
                <th>–†–æ–ª—å</th>
                <th>–î—ñ—ó</th>
              </tr>
            </thead>
            <tbody>
              {users.map((u) => (
                <tr key={u.id}>
                  <td>{u.id}</td>
                  <td>{u.username}</td>
                  <td>{u.role}</td>
                  <td>
                    {/* TODO: –ö–Ω–æ–ø–∫–∞ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è */}
                    <button className="btn btn-sm btn-danger" onClick={() => handleDeleteUser(u.id)}>–í–∏–¥–∞–ª–∏—Ç–∏</button>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>

          <h5 className="mt-4">‚ûï –î–æ–¥–∞—Ç–∏ –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:</h5>
          <div className="row g-2 my-2">
            <div className="col-md-3">
              <input className="form-control" placeholder="–Ü–º‚Äô—è" value={form.username} onChange={(e) => setForm({ ...form, username: e.target.value })} />
            </div>
            <div className="col-md-3">
              <input className="form-control" type="password" placeholder="–ü–∞—Ä–æ–ª—å" value={form.password} onChange={(e) => setForm({ ...form, password: e.target.value })} />
            </div>
            <div className="col-md-3">
              <select className="form-select" value={form.role} onChange={(e) => setForm({ ...form, role: e.target.value })}>
                <option value="">–û–±–µ—Ä—ñ—Ç—å —Ä–æ–ª—å</option>
                <option value="admin">–ê–¥–º—ñ–Ω</option>
                <option value="warehouse">–°–∫–ª–∞–¥</option>
                <option value="production">–í–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–æ</option>
                <option value="director">–î–∏—Ä–µ–∫—Ç–æ—Ä</option>
              </select>
            </div>
            <div className="col-md-3">
              <button className="btn btn-success w-100" onClick={handleCreateUser}>–°—Ç–≤–æ—Ä–∏—Ç–∏</button>
            </div>
          </div>
        </>
      )}

      {role !== 'admin' && <p>–¢—É—Ç –±—É–¥–µ –¥–æ—Å—Ç—É–ø –¥–æ –º–æ–¥—É–ª—ñ–≤ CRM –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –≤–∞—à–æ—ó —Ä–æ–ª—ñ.</p>}
    </div>
  );
}

export default Dashboard;
